{"version":3,"file":"static/js/60.5018f242.chunk.js","mappings":"oPAEaA,EAAOC,EAAAA,GAAAA,GAAH,6KAUJC,EAAOD,EAAAA,GAAAA,GAAH,w2BAyCJE,EAAeF,EAAAA,GAAAA,EAAH,uG,kGCZzB,EArCkB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAAC,KAAD,WACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACE,2BACGK,GACC,gBACEI,IAAG,yCAAoCJ,GACvCK,IAAG,iBAAYN,GACfO,MAAM,QACNC,OAAO,WAGT,yCAEF,uBAAIR,UAbCD,EADD,KAqBjB,C,mLC5BYU,EAAYjB,EAAAA,GAAAA,IAAH,gcAmBTkB,EAAalB,EAAAA,GAAAA,KAAH,8KAUVmB,EAAenB,EAAAA,GAAAA,OAAH,obAsBZoB,EAAiBpB,EAAAA,GAAAA,MAAH,sP,SCrB3B,EAvBkB,SAAC,GAAkB,IAAhBqB,EAAe,EAAfA,SACnB,OACE,SAACJ,EAAD,WACE,UAACC,EAAD,CAAYG,SAAUA,EAAtB,WACE,SAACD,EAAD,CACEE,KAAK,OACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAACP,EAAD,WACE,SAAC,MAAD,UAKT,EC6BD,EA/Ce,WAAO,IAAD,EACnB,GAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOxB,EAAP,KAAeyB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACMC,EAAS,UAAGN,EAAaO,IAAI,gBAApB,QAAgC,IAE/CC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACTC,IACFH,GAAY,IACZM,EAAAA,EAAAA,IAAeH,GACZI,MAAK,SAAArC,GACJyB,EAAUzB,GACY,IAAlBA,EAAOsC,QACTN,GAAa,EAEhB,IACAO,MAAMC,QAAQC,KAEpB,GAAE,CAACR,IAgBJ,OACE,iCACE,SAAC,EAAD,CAAWf,SAhBM,SAAAwB,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOzB,KAAK0B,MACtBC,EAAuB,KAAVH,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEjC,KAAVA,GACFI,EAAAA,GAAAA,MAAY,6BAGdpB,EAAgBmB,GAEhBL,EAAEG,OAAOzB,KAAK0B,MAAQ,EACvB,IAKIjB,GAAYE,IACX,SAAC,KAAD,qDAEDF,IAAaE,IAAa,SAACkB,EAAA,EAAD,CAAWjD,OAAQA,MAGnD,C,mJCnDKkD,EAAW,gCACXC,EACJ,sNAEK,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,iGACCC,EAAc,CAClBC,OAAQ,uBAEJC,EAAU,CACdC,OAAQ,CACNC,SAAU,QACVC,eAAe,GAEjBC,QAAS,CACPC,cAAc,UAAD,OAAYT,GACzB,eAAgB,qBAGdU,EAdD,UAcUX,GAdV,OAcqBG,EAAYC,QAdjC,SAekBQ,EAAAA,EAAAA,IAAUD,EAAKN,GAfjC,cAeCQ,EAfD,yBAiBEA,EAASC,KAAKC,SAjBhB,kEAoBA,SAAe7B,IAAtB,4CAAO,OAAP,oBAAO,+GAA8B8B,EAA9B,+BAA4C,GAC3Cb,EAAc,CAClBc,OAAQ,gBAEJZ,EAAU,CACdC,OAAQ,CACNZ,MAAOsB,EACPT,SAAU,QACVC,eAAe,GAEjBC,QAAS,CACPC,cAAc,UAAD,OAAYT,GACzB,eAAgB,qBAGdU,EAfD,UAeUX,GAfV,OAeqBG,EAAYc,QAfjC,SAgBkBL,EAAAA,EAAAA,IAAUD,EAAKN,GAhBjC,cAgBCQ,EAhBD,yBAkBEA,EAASC,KAAKC,SAlBhB,mEAqBA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kGAAwClD,EAAxC,+BAA+C,UAC9CmD,EAAkB,CACtBC,QAAQ,SAAD,OAAWF,GAClBG,QAAQ,SAAD,OAAWH,EAAX,YACPI,QAAQ,SAAD,OAAWJ,EAAX,YACPK,OAAO,SAAD,OAAWL,EAAX,YAEFd,EAAU,CACdC,OAAQ,CACNC,SAAU,QACVC,eAAe,GAEjBC,QAAS,CACPC,cAAc,UAAD,OAAYT,GACzB,eAAgB,qBAGdU,EAjBD,UAiBUX,GAjBV,OAiBqBoB,EAAgBnD,IAjBrC,SAkBkB2C,EAAAA,EAAAA,IAAUD,EAAKN,GAlBjC,cAkBCQ,EAlBD,yBAoBEA,EAASC,MApBX,mE","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.Styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/movieSearchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  padding: 0 0 20px 0;\n  margin-top: 10px;\n`;\n\nexport const Item = styled.li`\n  overflow: hidden;\n  border: solid 1px black;\n  :hover {\n    transform: scale(1.03);\n    box-shadow: 0 1px 4px #0000004d, -23px 0 20px -23px #000c,\n      23px 0 20px -23px #000c, inset 0 0 40px #0000001a;\n  }\n  & a {\n    color: #000000;\n    & div {\n      text-align: center;\n      width: 250px;\n      height: 460px;\n      & span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 376px;\n        border-bottom: solid 1px black;\n        font-size: 30px;\n      }\n      & img {\n        width: 250px;\n        margin-bottom: 5px;\n        border-bottom: solid 1px black;\n      }\n    }\n    & b {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 10px;\n      font-size: 16px;\n    }\n  }\n  &:hover > a {\n    color: red;\n  }\n`;\n\nexport const Notification = styled.b`\n  display: block;\n  margin: 20px auto 0;\n  font-size: 20px;\n  width: 200px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, List } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <div>\n              {poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={`Poster ${title}`}\n                  width=\"250px\"\n                  height=\"375px\"\n                />\n              ) : (\n                <span>No poster</span>\n              )}\n              <b>{title}</b>\n            </div>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const SearchBox = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: yellow;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.4;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    opacity: 1;\n  }\n  & svg {\n    width: 24px;\n    height: 24px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n  }\n`;\n\nexport const SearchbarInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  \n  &::placeholder {\n  font: inherit;\n  font-size: 18px;\n`;\n","import { FcSearch } from 'react-icons/fc';\nimport PropTypes from 'prop-types';\nimport {\n  SearchBox,\n  SearchForm,\n  SearchButton,\n  SearchbarInput,\n} from './SearchBar.Styled';\n\nconst SearchBar = ({ onSubmit }) => {\n  return (\n    <SearchBox>\n      <SearchForm onSubmit={onSubmit}>\n        <SearchbarInput\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <SearchButton>\n          <FcSearch />\n        </SearchButton>\n      </SearchForm>\n    </SearchBox>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getSearchMovie } from 'services/movieSearchAPI';\nimport { Notification } from 'components/MovieList/MovieList.styled';\nimport MovieList from 'components/MovieList';\nimport SearchBar from 'components/SearchBar';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searched, setSearched] = useState(false);\n  const [noResults, setNoResults] = useState(false);\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    setNoResults(false);\n    if (movieName) {\n      setSearched(true);\n      getSearchMovie(movieName)\n        .then(movies => {\n          setMovies(movies);\n          if (movies.length === 0) {\n            setNoResults(true);\n          }\n        })\n        .catch(console.log);\n    }\n  }, [movieName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.name.value;\n    const nextParams = query !== '' ? { query } : {};\n\n    if (query === '') {\n      toast.error('Please enter your request');\n    }\n\n    setSearchParams(nextParams);\n\n    e.target.name.value = '';\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit} />\n      {searched && noResults && (\n        <Notification>No results found for your search query</Notification>\n      )}\n      {searched && !noResults && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYmVhZjQ1OWJkYzM0ZDczZDRiNTMwMzBhYWQ5NDE3MSIsInN1YiI6IjYzZGJmOWFjMTA5MjMwMDBmMDRkYTgyNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.uC-Z-fFxmbW7fDBPbdS7Pqx5UhdM-U37Tv5InKJMlYc';\n\nexport async function getTrendingMovies() {\n  const typeRequest = {\n    trends: 'trending/movie/week',\n  };\n  const options = {\n    params: {\n      language: 'en-US',\n      include_adult: false,\n    },\n    headers: {\n      Authorization: `Bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n  const url = `${BASE_URL}${typeRequest.trends}`;\n  const response = await axios.get(url, options);\n\n  return response.data.results;\n}\n\nexport async function getSearchMovie(searchQuery = '') {\n  const typeRequest = {\n    search: 'search/movie',\n  };\n  const options = {\n    params: {\n      query: searchQuery,\n      language: 'en-US',\n      include_adult: false,\n    },\n    headers: {\n      Authorization: `Bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n  const url = `${BASE_URL}${typeRequest.search}`;\n  const response = await axios.get(url, options);\n\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId, type = 'details') {\n  const typeRequestById = {\n    details: `movie/${movieId}`,\n    credits: `movie/${movieId}/credits`,\n    reviews: `movie/${movieId}/reviews`,\n    videos: `movie/${movieId}/videos`,\n  };\n  const options = {\n    params: {\n      language: 'en-US',\n      include_adult: false,\n    },\n    headers: {\n      Authorization: `Bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n  const url = `${BASE_URL}${typeRequestById[type]}`;\n  const response = await axios.get(url, options);\n\n  return response.data;\n}\n"],"names":["List","styled","Item","Notification","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","width","height","SearchBox","SearchForm","SearchButton","SearchbarInput","onSubmit","type","name","autoComplete","autoFocus","placeholder","useState","setMovies","useSearchParams","searchParams","setSearchParams","searched","setSearched","noResults","setNoResults","movieName","get","useEffect","getSearchMovie","then","length","catch","console","log","e","preventDefault","query","target","value","nextParams","toast","MovieList","BASE_URL","TOKEN","getTrendingMovies","typeRequest","trends","options","params","language","include_adult","headers","Authorization","url","axios","response","data","results","searchQuery","search","getMovieDetails","movieId","typeRequestById","details","credits","reviews","videos"],"sourceRoot":""}