{"version":3,"file":"static/js/607.8bd1756b.chunk.js","mappings":"2OAEaA,E,QAAOC,GAAAA,GAAH,yc,SCoCjB,EAhCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8CF,EAAAA,EAAAA,UAAS,MAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,EAAS,WACtBS,MAAK,SAAAC,GACJN,EAAWM,EAAKC,SAChBL,EAAmBI,EAAKE,cACzB,IACAC,MAAMC,QAAQC,IAClB,GAAE,CAACf,IAEoB,IAApBK,GACK,iEAGLA,EAAkB,GAElB,SAACP,EAAD,UACGK,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,WAHzB,CAYD,C,mJClCKC,EAAW,gCACXC,EACJ,sNAEK,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,iGACCC,EAAc,CAClBC,OAAQ,uBAEJC,EAAU,CACdC,OAAQ,CACNC,SAAU,QACVC,eAAe,GAEjBC,QAAS,CACPC,cAAc,UAAD,OAAYT,GACzB,eAAgB,qBAGdU,EAdD,UAcUX,GAdV,OAcqBG,EAAYC,QAdjC,SAekBQ,EAAAA,EAAAA,IAAUD,EAAKN,GAfjC,cAeCQ,EAfD,yBAiBEA,EAASxB,KAAKC,SAjBhB,kEAoBA,SAAewB,IAAtB,4CAAO,OAAP,oBAAO,+GAA8BC,EAA9B,+BAA4C,GAC3CZ,EAAc,CAClBa,OAAQ,gBAEJX,EAAU,CACdC,OAAQ,CACNW,MAAOF,EACPR,SAAU,QACVC,eAAe,GAEjBC,QAAS,CACPC,cAAc,UAAD,OAAYT,GACzB,eAAgB,qBAGdU,EAfD,UAeUX,GAfV,OAeqBG,EAAYa,QAfjC,SAgBkBJ,EAAAA,EAAAA,IAAUD,EAAKN,GAhBjC,cAgBCQ,EAhBD,yBAkBEA,EAASxB,KAAKC,SAlBhB,mEAqBA,SAAeH,EAAtB,+CAAO,OAAP,oBAAO,WAA+BR,GAA/B,kGAAwCuC,EAAxC,+BAA+C,UAC9CC,EAAkB,CACtBC,QAAQ,SAAD,OAAWzC,GAClB0C,QAAQ,SAAD,OAAW1C,EAAX,YACPG,QAAQ,SAAD,OAAWH,EAAX,YACP2C,OAAO,SAAD,OAAW3C,EAAX,YAEF0B,EAAU,CACdC,OAAQ,CACNC,SAAU,QACVC,eAAe,GAEjBC,QAAS,CACPC,cAAc,UAAD,OAAYT,GACzB,eAAgB,qBAGdU,EAjBD,UAiBUX,GAjBV,OAiBqBmB,EAAgBD,IAjBrC,SAkBkBN,EAAAA,EAAAA,IAAUD,EAAKN,GAlBjC,cAkBCQ,EAlBD,yBAoBEA,EAASxB,MApBX,mE","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/movieSearchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 20px;\n  & li {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    padding: 5px;\n    box-shadow: 0 1px 4px #0000004d, -23px 0 20px -23px #000c,\n      23px 0 20px -23px #000c, inset 0 0 40px #0000001a;\n    & b {\n      background-color: #0000001a;\n      text-decoration: underline;\n      line-height: 20px;\n      font-size: 20px;\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/movieSearchAPI';\nimport { List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState({});\n  const [quantityReviews, setQuantityReviews] = useState(null);\n\n  useEffect(() => {\n    getMovieDetails(movieId, 'reviews')\n      .then(data => {\n        setReviews(data.results);\n        setQuantityReviews(data.total_results);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  if (quantityReviews === 0) {\n    return <p>We donn`t any reviews for this movie.</p>;\n  }\n\n  if (quantityReviews > 0) {\n    return (\n      <List>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <b>Author: {review.author}</b>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </List>\n    );\n  }\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYmVhZjQ1OWJkYzM0ZDczZDRiNTMwMzBhYWQ5NDE3MSIsInN1YiI6IjYzZGJmOWFjMTA5MjMwMDBmMDRkYTgyNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.uC-Z-fFxmbW7fDBPbdS7Pqx5UhdM-U37Tv5InKJMlYc';\n\nexport async function getTrendingMovies() {\n  const typeRequest = {\n    trends: 'trending/movie/week',\n  };\n  const options = {\n    params: {\n      language: 'en-US',\n      include_adult: false,\n    },\n    headers: {\n      Authorization: `Bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n  const url = `${BASE_URL}${typeRequest.trends}`;\n  const response = await axios.get(url, options);\n\n  return response.data.results;\n}\n\nexport async function getSearchMovie(searchQuery = '') {\n  const typeRequest = {\n    search: 'search/movie',\n  };\n  const options = {\n    params: {\n      query: searchQuery,\n      language: 'en-US',\n      include_adult: false,\n    },\n    headers: {\n      Authorization: `Bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n  const url = `${BASE_URL}${typeRequest.search}`;\n  const response = await axios.get(url, options);\n\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId, type = 'details') {\n  const typeRequestById = {\n    details: `movie/${movieId}`,\n    credits: `movie/${movieId}/credits`,\n    reviews: `movie/${movieId}/reviews`,\n    videos: `movie/${movieId}/videos`,\n  };\n  const options = {\n    params: {\n      language: 'en-US',\n      include_adult: false,\n    },\n    headers: {\n      Authorization: `Bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n  const url = `${BASE_URL}${typeRequestById[type]}`;\n  const response = await axios.get(url, options);\n\n  return response.data;\n}\n"],"names":["List","styled","movieId","useParams","useState","reviews","setReviews","quantityReviews","setQuantityReviews","useEffect","getMovieDetails","then","data","results","total_results","catch","console","log","map","review","author","content","id","BASE_URL","TOKEN","getTrendingMovies","typeRequest","trends","options","params","language","include_adult","headers","Authorization","url","axios","response","getSearchMovie","searchQuery","search","query","type","typeRequestById","details","credits","videos"],"sourceRoot":""}